version: "3.8"

services:
#  db:
#    image: postgres:15
#    networks:
#      - mynetwork
#    restart: always
#    env_file:
#      - .env
#    ports:
#      - "5432:5432"
#    volumes:
#      - ./postgres-data:/var/lib/postgresql/data
  redis:
    image: redis:7-alpine
    networks:
      - mynetwork
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning --requirepass eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
    volumes:
      - ./redis:/data
#    depends_on:
#      - db
  stats:
    image: alexeynaidiuk/targets-api:latest
    build: .
    restart: always
    env_file:
      - ".env"
    environment:
      - DEBUG=false
    networks:
      - mynetwork
#    depends_on:
#      - db
    command: "python3 -m app.stats"
  cache:
    image: alexeynaidiuk/targets-api:latest
    build: .
    restart: always
    env_file:
      - ".env"
    environment:
      - DEBUG=false
    networks:
      - mynetwork
    depends_on:
      - redis
    command: "python3 -m app.cache"
  targets-api:
    command: uvicorn app.main:app --host=$HOST --port=$PORT
    image: alexeynaidiuk/targets-api:latest
    build: .
    restart: always
    env_file:
       - ".env"
    environment:
      - DEBUG=false
    networks:
      - mynetwork
    ports:
      - "8181"
    volumes:
      - ./targets:/targets
      - ./templates:/templates
    depends_on:
      - cache
      - stats
  nginx:
    image: nginx:1.24.0-alpine
    restart: always
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "8181:80"
    networks:
      - mynetwork
    depends_on:
      - targets-api
networks:
  mynetwork:
    name: "mynetwork"
    driver: bridge
